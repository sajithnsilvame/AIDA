<template>
  <div class="content-wrapper" v-click-outside="wantToLeave">
    <app-page-top-section :title="productId ? $t('edit_product') : $addLabel('product')" :hide-button="true"
      icon="menu" />

    <app-overlay-loader v-if="editDataLoading" />
    <template>
      <div class="card border-0 card-with-shadow" v-show="!editDataLoading">
        <div class="card-body">
          <div class="min-height-400" :class="{ 'loading-opacity': !isActive.renderComponent }">
            <fieldset class="form-group">
              <legend class="text-muted text-size-18 border-bottom pb-2 mb-3">
                {{ $t('product_information') }}
              </legend>

              <!-- Category -->
              <div class="form-group row align-items-center mb-1">
                <label class="mb-lg-0 col-lg-3">
                  {{ $t('type') }}
                </label>
                <div class="col-lg-7">
                  <div class="row no-gutters">
                    <div class="col-12 col-md-12">
                      <select class="form-control" v-model="formData.category_id">
                        <option value="" disabled>Select Category</option>
                        <!-- Populate options dynamically from groupOptions -->
                        <option v-for="option in selectableList.categories" :key="option.id" :value="option.id">
                          {{ option.name }}
                        </option>
                      </select>
                    </div>
                  </div>
                </div>
              </div>
            </fieldset>

            <div v-if="formData.category_id">
              <fieldset class="form-group mb-5">
                <div class="form-group row align-items-center" v-if="formData.category_id === 2">

                  <div>

                    <p> {{ $t("csv_download_label") }}
                      <a href="#" @click.prevent="sampleDownload">{{ $t("gem") }}</a>
                    </p>

                  </div>
                </div>

                <div class="form-group row align-items-center" v-if="formData.category_id === 1">

                  <div>

                    <p> {{ $t("csv_download_label") }}
                      <a href="#" @click.prevent="sampleDownload">{{ $t("ssss") }}</a>
                    </p>

                  </div>
                </div>
              </fieldset>
            </div>

            <app-overlay-loader v-if="!isActive.renderComponent" />
          </div>

          <div class="row">
            <div class="col-12 mt-5">
              <app-cancel-button btn-class="btn-secondary" @click="handleCancelBtnClick" />
              <app-submit-button
                :btn-class="`ml-2 ${showUpcLoader || !upcIsUnique || formData.variants.some(variant => !variant.upcData.variantUpcIsUnique) ? 'temp-disable' : ''}`"
                :loading="loading" @click="submitData" />
            </div>
          </div>
        </div>
      </div>
    </template>
  </div>
</template>

<script>
import Note from "../../../../../common/Components/Helper/Note";
import FormHelperMixins from "../../../../../common/Mixin/Global/FormHelperMixins";
import ProductCreateMixin from "./ProductCreateMixin";
import { axiosGet, urlGenerator } from "../../../../../common/Helper/AxiosHelper";
import StatusQueryMixin from "../../../../../common/Mixin/Global/StatusQueryMixin";
import ProductEditMixin from "./ProductEditMixin";
import ProductUpcValidateMixin from "./ProductUpcValidateMixin";
import {
  SELECTABLE_CATEGORIES,
  INVENTORY
} from "../../../../Config/ApiUrl-CP";

export default {
  name: "ProductCreateEdit",
  components: {
    Note
  },
  mixins: [FormHelperMixins, ProductCreateMixin, StatusQueryMixin, ProductEditMixin, ProductUpcValidateMixin],
  props: ['productId'],
  data() {
    return {
      isLoaded: false,
      renderCategorySelectComponent: true,

      categoryOptions: {
        url: urlGenerator(SELECTABLE_CATEGORIES),
        query_name: "search_by_name",
        params: {
          status_id: '',
        },
        per_page: 10,
        loader: "app-pre-loader",
        modifire: ({ id, name: value }) => ({ id, value }),
        prefetch: !Boolean(this.productId)
      },
    }
  },
  methods: {
    handleCancelBtnClick() {
      this.$emit('cancel');
      window.location.replace(urlGenerator(PRODUCT_LIST));
    },



    
    gemSampleDownload() {
      let commas = "";
      let keys = [
        "Stock No",
        "Category",
        "Name",
        "Selling price",
        "Unit price",
        "Date",
        "nos/pcs",
        "weight",
        "Description",     
      ];

      if (this.sampleFileType.length) {
        keys = [...this.validKeys];
        commas = ",".repeat(keys.slice(5).length);
      }

      this.downloadCSV(
          `${keys.join(",")}\n` +
          `Product 1,description...,Category-Wheat,Subcategory-Sister Fisher I,Brand-Cornsilk,Unit-Purple,Group-Teal,single,upc-02,211,11,"","",${commas}\n` +
          `Product 2 ,description...,Category-Wheat,Subcategory-Sister Fisher I,Brand-Cornsilk,Unit-Purple,Group-Teal,single,upc-5,300,10,"","",${commas}\n` +
          `Product 3 ,description...,Category-Wheat,Subcategory-Sister Fisher I,Brand-Cornsilk,Unit-Purple,Group-Teal,variant,upc-4,400,10,"red,m","product color red size m",${commas}\n`
    );
    },
    
    downloadCSV(csv) {
      let e = document.createElement("a");
      e.href = "data:text/csv;charset=utf-8," + encodeURI(csv);
      e.target = "_blank";
      e.download = `${this.$t("products")}.csv`;
      e.click();
    },































  },
  mounted() {
    setTimeout(() => this.dropZoneBoot = true);
  },
  computed: {
    goToStockPage() {
      return urlGenerator(INVENTORY);
    },
  },
}
</script>

<style scoped>
.pe-none {
  pointer-events: none;
}

.temp-disable {
  opacity: 0.5;
  pointer-events: none;
}
</style>
